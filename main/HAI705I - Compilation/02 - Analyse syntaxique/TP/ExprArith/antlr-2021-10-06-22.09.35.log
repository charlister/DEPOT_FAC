2021-10-06 22:09:34:538 grammar LogManager.java:25 before: (COMBINED_GRAMMAR ExprArith (RULES (RULE expr (BLOCK (ALT additionExpr))) (RULE additionExpr (BLOCK (ALT multiplyExpr (* (BLOCK (ALT '+' multiplyExpr) (ALT '-' multiplyExpr)))))) (RULE multiplyExpr (BLOCK (ALT atomExpr (* (BLOCK (ALT '*' atomExpr) (ALT '/' atomExpr)))))) (RULE atomExpr (BLOCK (ALT Number) (ALT '(' additionExpr ')') (ALT '-' atomExpr))) (RULE Number (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2021-10-06 22:09:34:559 grammar LogManager.java:25 after: (COMBINED_GRAMMAR ExprArith (RULES (RULE expr (BLOCK (ALT additionExpr))) (RULE additionExpr (BLOCK (ALT multiplyExpr (* (BLOCK (ALT '+' multiplyExpr) (ALT '-' multiplyExpr)))))) (RULE multiplyExpr (BLOCK (ALT atomExpr (* (BLOCK (ALT '*' atomExpr) (ALT '/' atomExpr)))))) (RULE atomExpr (BLOCK (ALT Number) (ALT '(' additionExpr ')') (ALT '-' atomExpr))) (RULE Number (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2021-10-06 22:09:34:595 grammar LogManager.java:25 after extract implicit lexer =(COMBINED_GRAMMAR ExprArith (RULES (RULE expr (BLOCK (ALT additionExpr))) (RULE additionExpr (BLOCK (ALT multiplyExpr (* (BLOCK (ALT '+' multiplyExpr) (ALT '-' multiplyExpr)))))) (RULE multiplyExpr (BLOCK (ALT atomExpr (* (BLOCK (ALT '*' atomExpr) (ALT '/' atomExpr)))))) (RULE atomExpr (BLOCK (ALT Number) (ALT '(' additionExpr ')') (ALT '-' atomExpr)))))
2021-10-06 22:09:34:595 grammar LogManager.java:25 lexer =(LEXER_GRAMMAR ExprArithLexer (RULES (RULE T__0 (BLOCK (ALT '+'))) (RULE T__1 (BLOCK (ALT '-'))) (RULE T__2 (BLOCK (ALT '*'))) (RULE T__3 (BLOCK (ALT '/'))) (RULE T__4 (BLOCK (ALT '('))) (RULE T__5 (BLOCK (ALT ')'))) (RULE Number (BLOCK (ALT (+ (BLOCK (ALT (.. '0' '9'))))))) (RULE WS (BLOCK (LEXER_ALT_ACTION (ALT (+ (BLOCK (ALT [ \t\r\n])))) skip)))))
2021-10-06 22:09:35:034 semantics LogManager.java:25 tokens={EOF=-1, T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, Number=7, WS=8}
2021-10-06 22:09:35:034 semantics LogManager.java:25 strings={'+'=1, '-'=2, '*'=3, '/'=4, '('=5, ')'=6}
2021-10-06 22:09:35:045 LL1 LogManager.java:25 
DECISION 0 in rule additionExpr
2021-10-06 22:09:35:050 LL1 LogManager.java:25 look=[1, 2]
2021-10-06 22:09:35:050 LL1 LogManager.java:25 LL(1)? true
2021-10-06 22:09:35:050 LL1 LogManager.java:25 
DECISION 1 in rule additionExpr
2021-10-06 22:09:35:050 LL1 LogManager.java:25 look=[{1..2}, {<EOF>, 6}]
2021-10-06 22:09:35:050 LL1 LogManager.java:25 LL(1)? true
2021-10-06 22:09:35:050 LL1 LogManager.java:25 
DECISION 2 in rule multiplyExpr
2021-10-06 22:09:35:051 LL1 LogManager.java:25 look=[3, 4]
2021-10-06 22:09:35:051 LL1 LogManager.java:25 LL(1)? true
2021-10-06 22:09:35:051 LL1 LogManager.java:25 
DECISION 3 in rule multiplyExpr
2021-10-06 22:09:35:051 LL1 LogManager.java:25 look=[{3..4}, {<EOF>, 1..2, 6}]
2021-10-06 22:09:35:051 LL1 LogManager.java:25 LL(1)? true
2021-10-06 22:09:35:051 LL1 LogManager.java:25 
DECISION 4 in rule atomExpr
2021-10-06 22:09:35:051 LL1 LogManager.java:25 look=[7, 5, 2]
2021-10-06 22:09:35:051 LL1 LogManager.java:25 LL(1)? true
